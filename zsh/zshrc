#!/usr/bin/env zsh
# TODO Do I want to use oh-my-zsh instead?

unsetopt BEEP
setopt auto_cd # cd by typing diroctory name if it's not a command
setopt cdable_vars # we'll switch env to $env when using cd

alias vim="nvim"
export EDITOR="nvim"

# Languages
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Update PATH for local custom applications
export PATH="$HOME/.local/bin:$PATH"
export LD_LIBRARY_PATH="$HOME/.local/lib64:$HOME/.local/lib:$LD_LIBRARY_PATH"

# Paths, if not set
export XDG_CONFIG_HOME=${XDG_CONFIG_HOME:=~/.config}
export XDG_DATA_HOME=${XDG_DATA_HOME:=~/.local/share}
export XDG_STATE_HOME=${XDG_STATE_HOME:=~/.local/state}
export XDG_CACHE_HOME=${XDG_CACHE_HOME:=~/.local/cache}

# Autocomplete
autoload -Uz compaudit compinit complist
compinit -u # load the engine in local mode

setopt correct_all # autocorrect commands
setopt auto_list # automatically list choices on ambiguous completion
setopt auto_menu # automatically use menu completion
setopt always_to_end # move cursor to end if word had one match

zstyle ':completion:*' menu select # select completions with arrow keys

# Colours
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'

    zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
fi

# History configuration
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000

setopt extended_history         # record timestamp of command in HISTFILE
setopt hist_expire_dups_first   # delete duplicates first when HISTFILE exceeds HISTSIZE
setopt hist_ignore_dups         # ignore duplicated commands history list
setopt hist_ignore_space        # ignore commands that start with a space
setopt hist_verify              # show command with history expansion to user before running it
setopt inc_append_history       # add commands to HISTFILE in order of execution
setopt share_history            # shared command history data

bindkey "^R" history_incremental-pattern-search-backward

# Prompt
setopt prompt_subst

function myPromptWidth() {
    PROMPT_PERCENT_OF_LINE=25
    echo $(( ${COLUMNS:-80} * PROMPT_PERCENT_OF_LINE / 100 ))
}
width_part='$(myPromptWidth)'

PROMPT='%F{236}%K{81} %n@%m %f%k' # username and machine
PROMPT+='%F{231}%K{236} %${width_part}<..<%3~ %f%k' # cwd
PROMPT+=' %# '
RPROMPT='%K{131}%F{232} %D{%H:%M:%S} %f%k' # time
unset width_part

